@model IEnumerable<UXComex.GerenciadorPedidos.Web.ViewModels.ClientViewModel>

@{
    ViewData["Title"] = "Clients";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Client List</h2>
        <a asp-action="Create" class="btn btn-primary">Create New Client</a>
    </div>

    <div class="input-group mb-4">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by name or email" />
        <button class="btn btn-outline-secondary" type="button" id="searchButton">Search</button>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover rounded shadow-sm">
            <thead class="thead-dark">
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Registration Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="clientsTableBody">
                <!-- Table rows will be populated dynamically by jQuery -->
            </tbody>
        </table>
    </div>

    <!-- Pagination controls -->
    <nav aria-label="Page navigation">
        <ul class="pagination" id="pagination-container">
        </ul>
    </nav>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteClientModal" tabindex="-1" aria-labelledby="deleteClientModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteClientModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this client? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Html.AntiForgeryToken()

    <script>
        $(document).ready(function () {
            let currentPage = 1;
            let pageSize = 10;
            let currentSearchTerm = '';
            let clientIdToDelete = null;

            function loadClients(page, searchTerm) {
                // Show a loading indicator
                $('#clientsTableBody').html('<tr><td colspan="5" class="text-center">Loading...</td></tr>');

                $.get('@Url.Action("GetClients", "Client")', {
                    searchTerm: searchTerm,
                    pageNumber: page,
                    pageSize: pageSize
                }, function (data) {
                    const clients = data.items;
                    const totalPages = data.totalPages;

                    // Clear existing rows
                    $('#clientsTableBody').empty();

                    if (clients.length === 0) {
                        $('#clientsTableBody').html('<tr><td colspan="5" class="text-center">No clients found.</td></tr>');
                    } else {
                        // Populate the table with new data
                        $.each(clients, function (index, client) {
                            const registrationDate = new Date(client.registrationDate).toLocaleDateString();
                            const row = `<tr>
                                <td>${client.name}</td>
                                <td>${client.email}</td>
                                <td>${client.phone}</td>
                                <td>${registrationDate}</td>
                                <td>
                                    <a href="/Client/Edit/${client.id}" class="btn btn-sm btn-info">Edit</a>
                                    <button class="btn btn-sm btn-danger delete-btn" data-bs-toggle="modal" data-bs-target="#deleteClientModal" data-client-id="${client.id}">Delete</button>
                                </td>
                            </tr>`;
                            $('#clientsTableBody').append(row);
                        });
                    }

                    // Rebuild pagination links
                    const paginationContainer = $('#pagination-container');
                    paginationContainer.empty();

                    for (let i = 1; i <= totalPages; i++) {
                        const activeClass = i === page ? 'active' : '';
                        const li = `<li class="page-item ${activeClass}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
                        paginationContainer.append(li);
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    $('#clientsTableBody').html('<tr><td colspan="5" class="text-center text-danger">Failed to load clients.</td></tr>');
                    console.error("Error fetching clients:", errorThrown);
                });
            }

            // Initial load of clients
            // TODO: change the currentSearchTerm to be a ViewData attribute,
            // so if the user searches and then navigates away and comes back,
            // the search term is preserved.
            loadClients(currentPage, currentSearchTerm);

            $('#searchButton').on('click', function () {
                currentSearchTerm = $('#searchInput').val();
                currentPage = 1;
                loadClients(currentPage, currentSearchTerm);
            });

            // Handle enter key press in search input
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    $('#searchButton').click();
                }
            });

            $('#pagination-container').on('click', '.page-link', function (e) {
                e.preventDefault();
                const newPage = $(this).data('page');
                if (newPage !== currentPage) {
                    currentPage = newPage;
                    loadClients(currentPage, currentSearchTerm);
                }
            });

            // Open the delete modal
            $('#clientsTableBody').on('click', '.delete-btn', function() {
                clientIdToDelete = $(this).data('client-id');
            });

            // Event handler for the confirm delete button inside the modal
            $('#confirmDeleteButton').on('click', function () {
                if (clientIdToDelete) {
                    // Get the anti-forgery token from the hidden input field
                    const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: `@Url.Action("Delete", "Client", new { id = "__id__" })`.replace('__id__', clientIdToDelete),
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': antiForgeryToken
                        },
                        success: function (result) {
                            // Close the modal and reload the client list on success
                            var modal = bootstrap.Modal.getInstance(document.getElementById('deleteClientModal'));
                            modal.hide();
                            loadClients(currentPage, currentSearchTerm);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error("Error deleting client:", errorThrown);
                            alert("Failed to delete client. Please try again.");
                        }
                    });
                }
            });
        });
    </script>
}